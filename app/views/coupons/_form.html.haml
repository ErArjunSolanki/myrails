= form_for coupon, as: 'coupon', url: url, builder: Coupons::FormBuilder, html: {class: 'form'} do |form|
  .form-group
    .form-label
      = form.label :code
      = form.hint  :code
    .form-control
      = form.text_field :code, autofocus: true
      = form.error_for :code
  .form-group
    .form-label
      = form.label :description
      = form.hint  :description, 'foo'
    .form-control
      = form.text_field :description
      = form.error_for :description
  .form-group
    .form-label
      = form.label :redemption_limit
      = form.hint  :redemption_limit
    .form-control
      = form.number_field :redemption_limit, min: 0
      = form.error_for :redemption_limit
  .form-group
    .form-label
      = form.label :type
      = form.hint  :type
    .form-control
      = form.select :type, Coupons::CouponType.to_select, include_blank: true
      = form.error_for :type
  .form-group
    .form-label
      = form.label :amount
      = form.hint  :amount
    .form-control
      = form.text_field :amount
      = form.error_for :amount
  .form-group
    .form-label
      = form.label :valid_from
      = form.hint  :valid_from
    .form-control
      = form.date_select :valid_from, include_blank: true, start_year: Date.current.year, end_year: Date.current.year + 10
      = form.error_for :valid_from
  .form-group
    .form-label
      = form.label :valid_until
      = form.hint  :valid_until
    .form-control
      = form.date_select :valid_until, include_blank: true, start_year: Date.current.year, end_year: Date.current.year + 10
      = form.error_for :valid_until
  .form-actions.form-group
    = form.submit t(form.object.persisted? ? 'edit' : 'create', scope: 'coupons.coupon.buttons'), class: 'button rounded green'